import View from"./view.mjs";import sessions from"../../sessions.mjs";import{Module}from"../../packages/_module.mjs";import{PASSWORD_SAFE_STRING}from"../../../common/constants.mjs";import Express from"../express.mjs";export default class JoinView extends View{route="/join";socket="getJoinData";_template="join";_methods=["get","post"];async handleGet(s,e){try{this.constructor.assertDocumentDestination(s)}catch(s){return e.status(401).send(s.message)}const{game:t}=global;if(!t.world)return this._noWorld(s,e);if(!t.ready)return setTimeout((()=>this.handleGet(s,e)),1e3);await sessions.logoutWorld(s,e);const o=t.world.background,a=o?`body.background {\n      --background-url: url("${URL.parseSafe(o)?o:foundry.utils.getRoute(o,{prefix:express.routePrefix})}");\n    }`:"",n=View._getStaticContent({setup:!0});return e.render(this._template,{bodyClass:["auth","join","flexcol",o?"background":"",`theme-${config.options.cssTheme}`,`join-theme-${t.world.joinTheme??"default"}`].filterJoin(" "),messages:sessions.getMessages(s,{clear:!1}),pageTitle:t.world.title,layout:"setup",scripts:n.scripts,styles:n.styles,inlineStyles:a})}async handlePost(s,e){const{config:t,game:o}=global;if(!o.world)return this._noWorld(s,e);let a={};switch(s.body.action){case"shutdown":if(t.options.demoMode&&!s.session?.admin)return e.status(401),e.send("This option is not available for servers running in demo mode"),e;if(!t.adminPassword)return e.status(403),e.send("ERROR.InvalidAdminKey"),e;if(!sessions.authenticateAdmin(s,e).success)return e.send(s.session.messages.pop()?.message),s.session.messages=[],e;a=await o.world.deactivate(s,{asAdmin:!0}),a.status="success",a.message="The game world has been successfully deactivated";break;case"join":if(await sessions.logoutWorld(s,e),a=await sessions.authenticateUser(s,e),"failed"===a.status)return e}return e.json(a)}async handleSocket(s,e){const{game:t}=global;return t.world?e({release:global.release,world:t.world.vend(),modules:Module.getPackages({coreTranslation:!0}).map((s=>s.vend())),passwordString:PASSWORD_SAFE_STRING,isAdmin:s.admin,users:await db.User.dump(),activeUsers:Array.from(Object.keys(t.activity.users)),userId:s.worlds[t.world.id]||null,options:{language:global.config.options.language}}):e({})}}